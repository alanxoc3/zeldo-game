#!/usr/bin/env bash
t1="zeldo mapbuilder"
t2="amorg"

files_in_order="
src/lib.lua
src/story.lua
src/map_data.lua
src/mapbuilder_demo.lua
"
./pico_minifier -a -d $files_in_order > ._compiled.lua

# Now create the p8 file for the map builder.
cp zeldo.p8 .mapb.p8
perl -0777 -pi -e '
my $doc = do {
    local $/ = undef;
    open my $fh, "<", "._compiled.lua"
        or die "could not open file";
    <$fh>;
}; my $header = "'"-- $t1\n-- $t2"'";
s/(__lua__).*(__gfx__)/$1\n$header\n$doc\n$2/igs;
' .mapb.p8

# Next convert that pico8 file into a binary, so we can close out of it on save.
# pico8 .mapb.p8 -export "-i 48 .mapb.bin"
# .mapb.bin/linux/.mapb > .mapb.bin/tmp_map_data.lua
pico8 -run .mapb.p8 > .tmp_map_data.lua

# Now write to the map data file if you hit save in your program.
OUTPUT=$(cat .tmp_map_data.lua | tr -d "[:space:]")
if [ -z "$OUTPUT" ];
then
    echo "Program didn't output anything."
    echo "So... I'm not writing to src/map_data.lua"
else
    mv .tmp_map_data.lua src/map_data.lua
    echo "Wrote map to 'src/map_data.lua'."
fi

# And finally some cleanup.
# rm -r .mapb.bin
rm ._compiled.lua
rm .mapb.p8
