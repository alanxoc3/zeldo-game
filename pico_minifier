#!/usr/bin/perl -Iminifier_lib/
use strict;
use warnings;
use experimental 'smartmatch';
use Alanxoc3::Pico8FormatUtil;
use Getopt::Long qw(GetOptions);

my $dev_mode;
GetOptions('dev' => \$dev_mode) or die "Usage: $0 [--dev]\n";

# Constants specific to Zeldo.
my %constants;
$constants{'FPS'} = '60';
$constants{'CART_NAME'} = '"ZELDO_TEST13"';

# Save states
$constants{'HARD_MODE'}      = '1';
$constants{'SAVE_SPOT'}      = '2';
$constants{'MONEY'}          = '3';
$constants{'HEALTH'}         = '4';
$constants{'HAS_FORCE'}      = '5';
$constants{'HAS_BOOMERANG'}  = '6';
$constants{'HAS_BOMB'}       = '7';
$constants{'HAS_SHIELD'}     = '8';
$constants{'ALWAYS_TRUE'}    = '9';  # used
$constants{'HAS_BOW'}        = '10';
$constants{'HAS_SHOVEL'}     = '11';
$constants{'HAS_SWORD'}      = '12';
$constants{'HAS_BANJO'}      = '13'; # used
$constants{'LARK_DANCE'}     = '14';
$constants{'NAVY_DANCE'}     = '15';
$constants{'KEEP_DANCE'}     = '16';
$constants{'JANE_DANCE'}     = '17';
$constants{'BOB_DANCE'}      = '18';
$constants{'CHICKEN_1'}      = '19';
$constants{'CHICKEN_2'}      = '20';
$constants{'CHICKEN_3'}      = '21';
$constants{'CHICKEN_4'}      = '22';
$constants{'CHICKEN_5'}      = '23';
$constants{'SOUP_DELIVERED'} = '24';
$constants{'GHOST_1'}        = '25';
$constants{'GHOST_2'}        = '26';
$constants{'GHOST_3'}        = '27';
$constants{'GHOST_4'}        = '28';
$constants{'FOREST_BOSS'}    = '29';
$constants{'GRAVE_BOSS'}     = '30';
$constants{'CANNON_BOSS'}    = '31';
$constants{'IVAN_BOSS'}      = '32';

$constants{'KEY'}            = '33';
$constants{'LETTER'}         = '34';
$constants{'BOB_OUT'}        = '35';

# Rooms
$constants{'VILLAGE_PATH'}            = '1';
$constants{'LANK_HOUSE'}              = '2';
$constants{'MAYOR_HOUSE'}             = '3';
$constants{'TEACH_STUDIO'}            = '4';
$constants{'SHOP'}                    = '5';
$constants{'JANEBOB'}                 = '6';
$constants{'LIMENAVY'}                = '7';
$constants{'VILLAGE'}                 = '8';
$constants{'LANK_FRONT_YARD'}         = '9';
$constants{'FIELD'}                   = '10';
$constants{'GRAVEYARD_ENTRANCE'}      = '11';
$constants{'GRAVEYARD'}               = '12';
$constants{'GRAVEYARD_END'}           = '13';
$constants{'CANYON_START'}            = '14';
$constants{'CANYON_PATH'}             = '15';
$constants{'CANYON_END'}              = '16';
$constants{'FOREST_ENTRANCE'}         = '17';
$constants{'FOREST_LOST'}             = '18';
$constants{'FOREST_1'}                = '19';
$constants{'FOREST_2'}                = '20';
$constants{'FOREST_3'}                = '21';
$constants{'FOREST_4'}                = '22';
$constants{'FOREST_BOSS'}             = '23';
$constants{'FOREST_TREASURE'}         = '24';

# Go through the actual minifying.
my @lines = <>;
chomp(@lines);
@lines = remove_comments(@lines);
@lines = tokenize_lines(\@lines, \%constants);
@lines = remove_texts(@lines);
@lines = single_quotes_to_double(@lines);

if ($dev_mode) {
   @lines = remove_spaces(@lines);
} else {
   my %vars = populate_vars(@lines);
   @lines = remove_spaces(@lines);
   my $file_line = join(" ",@lines);
   @lines = ($file_line);
   @lines = remove_spaces(@lines);
   @lines = tokenize_lines(\@lines, \%vars);
}

# Uncomment for each thing to go on its own line.
# Note that this is slightly more compression space.
# $lines[0] =~ s/([^\"]) ([^\"])/$1\n$2/g;
@lines = pop_text_logics(@lines);
print $dev_mode ? "$_\n" : "$_" for @lines;
